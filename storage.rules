rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             request.auth.token.role == 'admin';
    }
    
    function isOwner(uid) {
      return isAuthenticated() && 
             request.auth.uid == uid;
    }
    
    function isValidImageFile() {
      return resource.contentType.matches('image/.*') &&
             resource.size < 5 * 1024 * 1024; // 5MB limit
    }
    
    function isValidPdfFile() {
      return resource.contentType == 'application/pdf' &&
             resource.size < 10 * 1024 * 1024; // 10MB limit
    }

    // Submission uploads - users can upload to their own submission folder
    match /submissions/{uid}/{allPaths=**} {
      allow read, write: if isOwner(uid) && (isValidImageFile() || isValidPdfFile());
    }

    // Published restaurant content - public read, admin write
    match /restaurants/{restaurantId}/{allPaths=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // User profile images
    match /users/{uid}/profile/{allPaths=**} {
      allow read: if true;
      allow write: if isOwner(uid) && isValidImageFile();
    }
  }
} 